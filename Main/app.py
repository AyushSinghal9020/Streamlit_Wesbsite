import streamlit as st
from copy import deepcopy
from PIL import Image
import streamlit.components.v1 as components

from helper import (
    check_api , 
    get_caption , 
    get_music , 
    get_image_base64_str ,
    set_bg_hack , 
    get_markdown_iamge , 
    NeuralNetwork ,
    answer_question
)

import google.generativeai as genai
import torch 
from torchvision.utils import save_image
from presidio_analyzer import AnalyzerEngine

st.set_page_config(layout = 'wide')

themes = {
    '0' : [
        'Assets/Background/Road.jpg' , 
        '# Road - Where the journey never ends and so does the traffic.' , 
        'If you dont like the Road theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '1' : [
        'Assets/Background/Nature.jpg' , 
        '# No, you cannot eat that Mushroom' , 
        'If you dont like the Nature theme, you can change it by clicking on the `Generate Images` Button'
        ] , 
    '2' : [
        'Assets/Background/City.jpg' , 
        '# City - Where the lights never go out and so does the noise.'
        ] ,
    '3' : [
        'Assets/Background/Space.jpg' , 
        '# No, you cannot pee there'  ,  
        'If you dont like the Space theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '4' : [
        'Assets/Background/Sea.jpg' , 
        '# Every sea is just a huge Pond' , 
        'If you dont like the Sea theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '5' : [
        'Assets/Background/Plane.jpg' , 
        '# No, your phone will not survive that high' ,
        'If you dont like the Plane theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '6' : [
        'Assets/Background/Mountain.jpg' , 
        '# Mountain - Where the air is thin and so are the chances of survival' , 
        'If you dont like the Mountain theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '7' : [
        'Assets/Background/WaterFall.jpg' , 
        '# WaterFall - Natures way to felx' , 
        'If you dont like the WaterFall theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '8' : [
        'Assets/Background/Fish.png' , 
        '# No, they cannot swim in stomach' , 
        'If you dont like the Fish theme, you can change it by clicking on the `Generate Images` Button'
        ] ,
    '9' : [
        'Assets/Background/Desert.jpg' , 
        '# Desert - Where nature hosts Mirage fashion shows' , 
        'If you dont like the Desert theme, you can change it by clicking on the `Generate Images` Button' 
        ]
}

def home() : 
    '''
    Home Page
    '''   

    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])

    st.title('Ayush Singhal ')
    st.write('Kaggle Notebooks Master')

    col_1 , col_2 = st.columns(2)

    question = col_1.text_input('Ask me anything (Powered By Google Gemini)' , 'What is the meaning of life ?')

    if col_1.button('Ask') :

        answer = answer_question(question)
        st.write(answer)

    for _ in range(7) : st.markdown('')

    st.markdown(open('Assets/TextFiles/About Me.txt').read() , unsafe_allow_html = True)
    st.markdown(open('Assets/TextFiles/About Me Markdown.txt').read() , unsafe_allow_html=True)

    for _ in range(7) : st.markdown('')

    st.markdown(open('Assets/TextFiles/Skills.txt').read() , unsafe_allow_html = True)
    st.markdown(open('Assets/TextFiles/Skills Markdown.txt').read() , unsafe_allow_html = True)

    classifier = NeuralNetwork()
    classifier.load_state_dict(torch.load('Assets/Models/Classifier Model' , map_location = torch.device('cpu')))
    generator = torch.load('Assets/Models/Generator Model' , map_location = torch.device('cpu'))
    st.write('Stats can take some time to load')

    col_1 , col_2 = st.columns(2)


    if col_1.button('Generate Images') : 

        latent = torch.randn(1 , 128 , 1 , 1)

        fake_image = generator(latent)
        label = classifier(fake_image)

        save_image(fake_image, 'Generated.jpeg')
        col_1.image('Generated.jpeg', width=200, caption=f'Image of {torch.argmax(label)} Generated by GAN')

        with open('Assets/TextFiles/Theme.txt' , 'w') as file : file.write(str(torch.argmax(label).item()))
        theme_number = open('Assets/TextFiles/Theme.txt').read()

        col_2.markdown(themes[str(theme_number)][1])

        for _ in range(16) : col_2.markdown('')

    set_bg_hack(themes[str(theme_number)][0])

    st.markdown(open('Assets/TextFiles/Projects.txt').read() , unsafe_allow_html = True)

    col_1 , col_2  = st.columns(2)

    col_1.write('Use Navigation to go to specific project')
        
    st.markdown(open('Assets/TextFiles/Deep Learning Projects.txt').read() , unsafe_allow_html = True)
    
    col_1 , col_2 = st.columns(2)

    col_1.markdown(f'''
        <img 
            src="data:image/jpeg;base64,{get_image_base64_str('Assets/Project Tiles/Echos Of The Canvas.jpeg')}" 
            width="400" 
            height="200">
    ''' , unsafe_allow_html = True)
    col_2.markdown(f'''
        <img
            src="data:image/jpeg;base64,{get_image_base64_str('Assets/Project Tiles/Behind The Text.jpeg')}"
            width="400"
            height="200">
    ''' , unsafe_allow_html = True)
    col_1.markdown(f'''
        <img
            src="data:image/jpeg;base64,{get_image_base64_str('Assets/Project Tiles/Beyond The Visiible.jpeg')}"
            width="400"
            height="200">
    ''' , unsafe_allow_html = True)

    st.markdown(open('Assets/TextFiles/Research Projects.txt').read() , unsafe_allow_html = True)
    
    
    st.markdown(f'''
        <img
            src="data:image/jpeg;base64,{get_image_base64_str('Assets/Project Tiles/VAlrind.jpeg')}"
            width="400" 
            height="200"> 
    ''' , unsafe_allow_html = True)

    st.markdown(open('Assets/TextFiles/Development Projects.txt').read() , unsafe_allow_html = True)
    st.markdown(f'''
        <img 
            src="data:image/jpeg;base64,{get_image_base64_str('Assets/Project Tiles/VAdev.jpeg')}" 
            width="400" 
            height="200">
    ''' , unsafe_allow_html = True)

    st.markdown(open('Assets/TextFiles/Accomplishments.txt').read() , unsafe_allow_html = True)
    st.markdown(open('Assets/TextFiles/Accomplishments Markdown.txt').read() , unsafe_allow_html = True)

    col_1 , col_2 , col_3 , col_4 , col_5 , col_6 , col_7 , col_8 , col_9 , col_10 , col_11 , col_12 , col_13 , col_14 , col_15 = st.columns(15)

    col_1.markdown(f'''
<a href = 'ayushsinghal659@gmail.com'>
    <img 
        src="data:image/jpeg;base64,{get_image_base64_str('Assets/Reach/Mail.png')}" 
        width="60" 
        height="50">
</a>
''' , unsafe_allow_html = True)

    col_2.markdown(f'''
<a href = 'https://github.com/AyushSinghal9020'>
    <img 
        src="data:image/jpeg;base64,{get_image_base64_str('Assets/Reach/Github.png')}" 
        width="60" 
        height="50">
</a>
''' , unsafe_allow_html = True)

    col_3.markdown(f'''
<a href = 'https://www.kaggle.com/ayushs9020'>
    <img 
        src="data:image/jpeg;base64,{get_image_base64_str('Assets/Reach/Kaggle.png')}" 
        width="70" 
        height="50">
</a>
''' , unsafe_allow_html = True)

    col_4.markdown(f'''
<a href = 'www.linkedin.com'>
    <img 
        src="data:image/jpeg;base64,{get_image_base64_str('Assets/Reach/Linkdin.webp')}" 
        width="50" 
        height="50">
</a>
''' , unsafe_allow_html = True)

def image_to_music() : 
    '''
    Image to Music Page
    '''

    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])
    
    st.markdown(open('Assets/TextFiles/AI Gen-Text Detection.txt').read())

    image_in = st.file_uploader(
        'Image reference' , 
        type = ['png' , 'jpg' , 'jpeg'])

    if image_in : 

        image = Image.open(image_in)
        image.save('Assets/Generated/Gen.jpg')

        if st.button('Make music from my pic !') :

            st.write('Generating Captions !')
            caption = get_caption(image_in)

            st.write('Generating Music !')
            path = get_music(caption)

            st.audio(path , format = 'audio/mp4')
def pii_detection() :
    '''
    PII Detection Page
    '''
    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])
 
    st.markdown(open('Assets/TextFiles/PII Detection.txt').read())

    text = st.text_area('Enter Text')
    col_1 , col_2 = st.columns(2)

    if col_1.button('Detect') : 

        analyzer = AnalyzerEngine()
        analyzer_results = analyzer.analyze(text=text, language="en")

        st.write({
            analyzer_result.entity_type : text[analyzer_result.start : analyzer_result.end]
            for analyzer_result 
            in analyzer_results 
        })
def hubmap() :
    '''
    HUBMAP Page
    '''

    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])
    
    st.markdown(open('Assets/TextFiles/HUBMAP.txt').read())

    st.code(open('Assets/Code/Hubmap.py').read())
    components.iframe('https://wandb.ai/ayushsinghal659/uncategorized/reports/HUBMAP--Vmlldzo2ODEwMjg5?accessToken=tbwoj46kvijblyq3ce0s1vwlr3nk5knn89ctlmhg5etbht40604hyzr2b7muu9sj', height=600 , scrolling = True)

# def llm_exam() :

#     theme_number = open('Assets/TextFiles/Theme.txt').read()
#     set_bg_hack(themes[str(theme_number)][0])

#     st.markdown(open('Assets/TextFiles/LLM Exam.txt').read())

def val_rind() :

    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])

    st.markdown(open('Assets/TextFiles/VAl_rind.txt').read()) 
def va_dev() :
    
    theme_number = open('Assets/TextFiles/Theme.txt').read()
    set_bg_hack(themes[str(theme_number)][0])

    st.markdown(open('Assets/TextFiles/VA_dev.txt').read())
    
st.sidebar.title('navigation')

option = st.sidebar.selectbox(
    'Go to' , 
    [
        'Home' , 
        'Echos Of The Canvas' , 
        'Behind The Text' , 
        'Beyond The Visible' ,  
        'VAl_rind' , 
        'VA_dev'
    ])

if option == 'Home' : home()
elif option == 'Echos Of The Canvas' : image_to_music()
elif option == 'Behind The Text' : pii_detection()
elif option == 'Beyond The Visible' : hubmap()
# elif option == 'LLM Exam' : llm_exam()
elif option == 'VAl_rind' : val_rind()
elif option == 'VA_dev' : va_dev()
